<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>giscus评论系统</title>
    <link href="/2024/07/15/%E5%8D%9A%E5%AE%A2%E5%BC%80%E5%8F%91/Giscus/"/>
    <url>/2024/07/15/%E5%8D%9A%E5%AE%A2%E5%BC%80%E5%8F%91/Giscus/</url>
    
    <content type="html"><![CDATA[<h1 id="giscus"><a href="#giscus" class="headerlink" title="giscus"></a>giscus</h1><script src="https://giscus.app/client.js"        data-repo="shuzhanboke/shuzhanboke.github.io"        data-repo-id="R_kgDOPIELFA"        data-category="Announcements"        data-category-id="DIC_kwDOPIELFM4Csle3"        data-mapping="pathname"        data-strict="0"        data-reactions-enabled="1"        data-emit-metadata="0"        data-input-position="bottom"        data-theme="preferred_color_scheme"        data-lang="zh-CN"        crossorigin="anonymous"        async></script>]]></content>
    
    
    <categories>
      
      <category>技术分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Boke</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ROS系统环境搭建</title>
    <link href="/2024/07/15/%E5%9B%9B%E8%B6%B3%E6%9C%BA%E5%99%A8%E4%BA%BA%E7%8B%AC%E7%AB%8B%E5%BC%80%E5%8F%91/ROS%E4%BB%BF%E7%9C%9F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <url>/2024/07/15/%E5%9B%9B%E8%B6%B3%E6%9C%BA%E5%99%A8%E4%BA%BA%E7%8B%AC%E7%AB%8B%E5%BC%80%E5%8F%91/ROS%E4%BB%BF%E7%9C%9F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<h1 id="ROS系统搭建"><a href="#ROS系统搭建" class="headerlink" title="ROS系统搭建"></a>ROS系统搭建</h1><h2 id="小乌龟："><a href="#小乌龟：" class="headerlink" title="小乌龟："></a>小乌龟：</h2><p>rosrun turtlesim turtlesim_node</p><h2 id="小乌龟运动控制："><a href="#小乌龟运动控制：" class="headerlink" title="小乌龟运动控制："></a>小乌龟运动控制：</h2><p>rosrun turtlesim turtle_teleop_key cmd_vel:&#x3D;&#x2F;turtle1&#x2F;cmd_vel</p><h2 id="小乌龟节点监控："><a href="#小乌龟节点监控：" class="headerlink" title="小乌龟节点监控："></a>小乌龟节点监控：</h2><p>rostopic echo &#x2F;turtle1&#x2F;pose</p><h2 id="控制一个小乌龟一直转圈："><a href="#控制一个小乌龟一直转圈：" class="headerlink" title="控制一个小乌龟一直转圈："></a>控制一个小乌龟一直转圈：</h2><p>rostopic pub -r 10 &#x2F;new_turtle&#x2F;cmd_vel geometry_msgs&#x2F;Twist “linear:<br>  x: 1.0<br>  y: 0.0<br>  z: 0.0<br>angular:<br>  x: 0.0<br>  y: 0.0<br>  z: 1.0”</p><h2 id="制造一个新的小乌龟："><a href="#制造一个新的小乌龟：" class="headerlink" title="制造一个新的小乌龟："></a>制造一个新的小乌龟：</h2><p>rosservice call &#x2F;spawn 3 3 0.2 “new_turtle”</p><h2 id="显示ros系统拓朴关系："><a href="#显示ros系统拓朴关系：" class="headerlink" title="显示ros系统拓朴关系："></a>显示ros系统拓朴关系：</h2><p>rqt_graph</p><h2 id="启动ros"><a href="#启动ros" class="headerlink" title="启动ros"></a>启动ros</h2><p>roscore</p><h2 id="启动机器人仿真系统"><a href="#启动机器人仿真系统" class="headerlink" title="启动机器人仿真系统"></a>启动机器人仿真系统</h2><p>roslaunch urdf01_rviz car.launch</p><h2 id="ignition-gazebo加载world文件"><a href="#ignition-gazebo加载world文件" class="headerlink" title="ignition gazebo加载world文件"></a>ignition gazebo加载world文件</h2><p>LIBGL_ALWAYS_SOFTWARE&#x3D;0 MESA_GL_VERSION_OVERRIDE&#x3D;4.5 ign gazebo -v 4 -r ogre worlds&#x2F;factory.world</p><h2 id="unbuntu升级"><a href="#unbuntu升级" class="headerlink" title="unbuntu升级"></a>unbuntu升级</h2><p>wget <a href="http://archive.ubuntu.com/ubuntu/dists/jammy-updates/main/dist-upgrader-all/current/jammy.tar.gz">http://archive.ubuntu.com/ubuntu/dists/jammy-updates/main/dist-upgrader-all/current/jammy.tar.gz</a> tar -xzf jammy.tar.gz </p><p>sudo .&#x2F;jammy –frontend&#x3D;DistUpgradeViewGtk3</p><h1 id="ROS2"><a href="#ROS2" class="headerlink" title="ROS2"></a>ROS2</h1><h2 id="激活环境变量："><a href="#激活环境变量：" class="headerlink" title="激活环境变量："></a>激活环境变量：</h2><p>source &#x2F;opt&#x2F;ros&#x2F;humble&#x2F;setup.bash</p><h2 id="机器人模型启动："><a href="#机器人模型启动：" class="headerlink" title="机器人模型启动："></a>机器人模型启动：</h2><p>临时制定模型：</p><p>export TURTLEBOT3_MODEL&#x3D;waffle</p><p>永久指定模型：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;export TURTLEBOT3_MODEL=waffle&quot;</span> &gt;&gt; ~/.bashrc<br><span class="hljs-built_in">source</span> ~/.bashrc<br></code></pre></td></tr></table></figure><p>模型渲染：</p><p>ros2 launch turtlebot3_gazebo turtlebot3_world.launch.py</p><h2 id="键盘控制机器人："><a href="#键盘控制机器人：" class="headerlink" title="键盘控制机器人："></a>键盘控制机器人：</h2><p>ros2 run turtlebot3_teleop teleop_keyboard</p><h2 id="开启导航，开始建图"><a href="#开启导航，开始建图" class="headerlink" title="开启导航，开始建图"></a>开启导航，开始建图</h2><p>ros2 run slam_toolbox async_slam_toolbox_node   –ros-args   –params-file ~&#x2F;slam_params.yaml   -p use_sim_time:&#x3D;true   -p scan_topic:&#x3D;&#x2F;scan   -p mode:&#x3D;mapping</p><h2 id="启动slam节点"><a href="#启动slam节点" class="headerlink" title="启动slam节点"></a>启动slam节点</h2><p>ros2 launch turtlebot3_cartographer cartographer.launch.py \  use_sim_time:&#x3D;true \  publish_map_updates:&#x3D;true</p><h2 id="手动启动slam节点（非常重要）："><a href="#手动启动slam节点（非常重要）：" class="headerlink" title="手动启动slam节点（非常重要）："></a>手动启动slam节点（非常重要）：</h2><p>ros2 launch slam_toolbox online_async_launch.py</p><h2 id="rviz2配置"><a href="#rviz2配置" class="headerlink" title="rviz2配置"></a>rviz2配置</h2><p>ros2 run rviz2 rviz2 -d ~&#x2F;turtlebot3_nav.rviz</p><h2 id="开始自主导航地图"><a href="#开始自主导航地图" class="headerlink" title="开始自主导航地图"></a>开始自主导航地图</h2><p>ros2 launch turtlebot3_navigation2 navigation2.launch.py \  use_sim_time:&#x3D;false \  map:&#x3D;~&#x2F;turtlebot3_map.yaml</p><h2 id="启动流程"><a href="#启动流程" class="headerlink" title="启动流程"></a>启动流程</h2><h3 id="终端1：启动-Gazebo-仿真环境（必须首先运行）"><a href="#终端1：启动-Gazebo-仿真环境（必须首先运行）" class="headerlink" title="# 终端1：启动 Gazebo 仿真环境（必须首先运行）"></a># 终端1：启动 Gazebo 仿真环境（必须首先运行）</h3><p> ros2 launch turtlebot3_gazebo turtlebot3_world.launch.py use_sim_time:&#x3D;True </p><h3 id="终端2：启动导航-SLAM（注意-use-sim-time-必须与-Gazebo-一致）"><a href="#终端2：启动导航-SLAM（注意-use-sim-time-必须与-Gazebo-一致）" class="headerlink" title="#终端2：启动导航 + SLAM（注意 use_sim_time 必须与 Gazebo 一致）"></a>#终端2：启动导航 + SLAM（注意 use_sim_time 必须与 Gazebo 一致）</h3><p>ros2 launch turtlebot3_navigation2 navigation2.launch.py use_sim_time:&#x3D;True slam:&#x3D;True</p><h3 id="终端3：启动slam导航节点"><a href="#终端3：启动slam导航节点" class="headerlink" title="#终端3：启动slam导航节点"></a>#终端3：启动slam导航节点</h3><p>ros2 launch turtlebot3_cartographer cartographer.launch.py use_sim_time:&#x3D;true publish_map_updates:&#x3D;true</p><p>自动处理生命周期</p><h3 id="终端4：自动处理生命周期"><a href="#终端4：自动处理生命周期" class="headerlink" title="#终端4：自动处理生命周期"></a>#终端4：自动处理生命周期</h3><p>ros2 launch nav2_bringup bringup_launch.py \  use_sim_time:&#x3D;True \  map:&#x3D;&#x2F;home&#x2F;linsen&#x2F;turtlebot3_map_final.yaml \  autostart:&#x3D;True</p><h3 id="路径规划中断措施"><a href="#路径规划中断措施" class="headerlink" title="路径规划中断措施"></a>路径规划中断措施</h3><p>ros2 run rqt_lifecycle rqt_lifecycle  # 图形化状态管理（生命周期可视化工具）</p><p>ros2 lifecycle set &#x2F;planner_server configure  # 将节点切换到配置状态<br>ros2 lifecycle set &#x2F;planner_server activate  # 激活节点（开始运行）</p><h3 id="查看地图文件"><a href="#查看地图文件" class="headerlink" title="查看地图文件"></a>查看地图文件</h3><p>eog $(dirname &#x2F;home&#x2F;linsen&#x2F;turtlebot3_map_final.yaml)&#x2F;$(grep image turtlebot3_map_final.yaml | awk ‘{print $2}’)</p><h2 id="自动导航流程"><a href="#自动导航流程" class="headerlink" title="自动导航流程"></a>自动导航流程</h2><h3 id="1-坐标初始化"><a href="#1-坐标初始化" class="headerlink" title="1.坐标初始化"></a>1.坐标初始化</h3><p>ros2 topic pub &#x2F;initialpose geometry_msgs&#x2F;msg&#x2F;PoseWithCovarianceStamped “{<br>  header: {frame_id: ‘map’},<br>  pose: {pose: {position: {x: 1.0, y: 1.0}, orientation: {z: 0.0, w: 1.0}}}<br>}”</p><h3 id="2-map-odom转化"><a href="#2-map-odom转化" class="headerlink" title="2.map&#x3D;&gt;odom转化"></a>2.map&#x3D;&gt;odom转化</h3><p>ros2 run tf2_ros static_transform_publisher 0 0 0 0 0 0 map odom</p><h3 id="3-仿真启动"><a href="#3-仿真启动" class="headerlink" title="3.仿真启动"></a>3.仿真启动</h3><p>ros2 launch turtlebot3_gazebo turtlebot3_world.launch.py</p><h3 id="4-导航、地图初始化"><a href="#4-导航、地图初始化" class="headerlink" title="4.导航、地图初始化"></a>4.导航、地图初始化</h3><p>ros2 launch turtlebot3_navigation2 navigation2.launch.py   use_sim_time:&#x3D;True   map:&#x3D;$HOME&#x2F;turtlebot3_map_final.yaml</p>]]></content>
    
    
    <categories>
      
      <category>技术分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ROS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>四足机器人开发指南</title>
    <link href="/2024/07/15/%E5%9B%9B%E8%B6%B3%E6%9C%BA%E5%99%A8%E4%BA%BA%E7%8B%AC%E7%AB%8B%E5%BC%80%E5%8F%91/%E5%9B%9B%E8%B6%B3%E6%9C%BA%E5%99%A8%E4%BA%BA%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97/"/>
    <url>/2024/07/15/%E5%9B%9B%E8%B6%B3%E6%9C%BA%E5%99%A8%E4%BA%BA%E7%8B%AC%E7%AB%8B%E5%BC%80%E5%8F%91/%E5%9B%9B%E8%B6%B3%E6%9C%BA%E5%99%A8%E4%BA%BA%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97/</url>
    
    <content type="html"><![CDATA[<h1 id="四足机器人开发指南"><a href="#四足机器人开发指南" class="headerlink" title="四足机器人开发指南"></a>四足机器人开发指南</h1><p>要开发一个完整的四足机器狗实现自动避障和自主导航，需要系统性地整合硬件和软件组件。以下是专业级的开发框架指南：</p><hr><h3 id="一、硬件系统（模块化选型）"><a href="#一、硬件系统（模块化选型）" class="headerlink" title="一、硬件系统（模块化选型）"></a><strong>一、硬件系统（模块化选型）</strong></h3><h4 id="1-核心运动硬件"><a href="#1-核心运动硬件" class="headerlink" title="1. 核心运动硬件"></a><strong>1. 核心运动硬件</strong></h4><table><thead><tr><th>组件</th><th>推荐型号&#x2F;规格</th><th>作用</th></tr></thead><tbody><tr><td><strong>主控制器</strong></td><td>NVIDIA Jetson AGX Orin&#x2F;Intel NUC 11</td><td>处理导航算法与实时控制</td></tr><tr><td><strong>电机驱动器</strong></td><td>MIT Mini Cheetah驱动器&#x2F;TMOTOR AK60-6</td><td>高带宽腿部伺服控制</td></tr><tr><td><strong>关节电机</strong></td><td>高扭矩无刷电机（如T-Motor U8）</td><td>提供精确的关节力矩控制</td></tr><tr><td><strong>IMU</strong></td><td>BMI088&#x2F;BMI085 + ADIS16470（冗余设计）</td><td>姿态估计与运动稳定性</td></tr></tbody></table><h4 id="2-感知传感器"><a href="#2-感知传感器" class="headerlink" title="2. 感知传感器"></a><strong>2. 感知传感器</strong></h4><table><thead><tr><th>传感器类型</th><th>推荐方案</th><th>性能要求</th></tr></thead><tbody><tr><td><strong>主激光雷达</strong></td><td>Livox Mid-40&#x2F;Velodyne VLP-16</td><td>360°扫描，10Hz以上更新率</td></tr><tr><td><strong>辅助深度相机</strong></td><td>Intel RealSense D455&#x2F;OAK-D Pro</td><td>RGB-D，全局快门，&lt;5ms延时</td></tr><tr><td><strong>超声波传感器</strong></td><td>MaxBotix MB1242</td><td>近距离盲区检测（30-500cm）</td></tr><tr><td><strong>接触传感器</strong></td><td>六轴力传感器（如OnRobot HEX-E）</td><td>足端触地检测与力控</td></tr></tbody></table><h4 id="3-电源与通信"><a href="#3-电源与通信" class="headerlink" title="3. 电源与通信"></a><strong>3. 电源与通信</strong></h4><ul><li><strong>电池系统</strong>：12S锂聚合物电池（50C放电）+ 分布式电源管理模块</li><li><strong>通信模块</strong>：WiFi 6（AX200）+ 4G LTE双冗余链路</li></ul><hr><h3 id="二、软件架构（ROS-2-Humble）"><a href="#二、软件架构（ROS-2-Humble）" class="headerlink" title="二、软件架构（ROS 2 Humble）"></a><strong>二、软件架构（ROS 2 Humble）</strong></h3><h4 id="1-核心功能包"><a href="#1-核心功能包" class="headerlink" title="1. 核心功能包"></a><strong>1. 核心功能包</strong></h4><pre><code class=" mermaid">graph TB    A[运动控制] --&gt;|LCM协议| B[MIT Cheetah Software]    C[环境感知] --&gt;|PointCloud2| D[Fast-LIO2]    D --&gt;|位姿| E[Voxgraph SLAM]    E --&gt;|地图| F[TeB Planner]    F --&gt;|控制指令| A</code></pre><h4 id="2-关键算法选型"><a href="#2-关键算法选型" class="headerlink" title="2. 关键算法选型"></a><strong>2. 关键算法选型</strong></h4><table><thead><tr><th>功能</th><th>推荐算法&#x2F;框架</th><th>优化方向</th></tr></thead><tbody><tr><td><strong>状态估计</strong></td><td>Contact-IMU-EKF</td><td>融合足端接触检测</td></tr><tr><td><strong>SLAM</strong></td><td>Voxgraph + FAST-LIO2</td><td>多传感器紧耦合</td></tr><tr><td><strong>运动规划</strong></td><td>Convex MPC + RaiSim仿真</td><td>动态地形适应</td></tr><tr><td><strong>避障</strong></td><td>3D动态障碍物预测（使用PyTorch）</td><td>时空联合推理</td></tr></tbody></table><h4 id="3-开发工具链"><a href="#3-开发工具链" class="headerlink" title="3. 开发工具链"></a><strong>3. 开发工具链</strong></h4><ul><li><strong>仿真环境</strong>：Isaac Sim + ROS 2 Bridge</li><li><strong>调试工具</strong>：PlotJuggler + Foxglove Studio</li><li><strong>CI&#x2F;CD</strong>：GitLab Runner + Docker容器化部署</li></ul><hr><h3 id="三、系统集成要点"><a href="#三、系统集成要点" class="headerlink" title="三、系统集成要点"></a><strong>三、系统集成要点</strong></h3><h4 id="1-时间同步方案"><a href="#1-时间同步方案" class="headerlink" title="1. 时间同步方案"></a><strong>1. 时间同步方案</strong></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># PTP精密时间协议配置</span><br><span class="hljs-built_in">sudo</span> apt install linuxptp<br><span class="hljs-built_in">sudo</span> ptp4l -i eth0 -S -m<br></code></pre></td></tr></table></figure><h4 id="2-实时性保障"><a href="#2-实时性保障" class="headerlink" title="2. 实时性保障"></a><strong>2. 实时性保障</strong></h4><ul><li>内核补丁：<code>RT_PREEMPT</code>补丁 + Xenomai3</li><li>进程优先级策略：<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">sched_param</span> <span class="hljs-title">param</span> =</span> &#123;.sched_priority = <span class="hljs-number">99</span>&#125;;<br>sched_setscheduler(<span class="hljs-number">0</span>, SCHED_FIFO, &amp;param);<br></code></pre></td></tr></table></figure></li></ul><h4 id="3-安全机制"><a href="#3-安全机制" class="headerlink" title="3. 安全机制"></a><strong>3. 安全机制</strong></h4><ul><li>硬件看门狗：STM32独立监控核心</li><li>软件心跳包：自定义ROS 2 Lifecycle Manager</li></ul><hr><h3 id="四、开发路线图（分阶段实现）"><a href="#四、开发路线图（分阶段实现）" class="headerlink" title="四、开发路线图（分阶段实现）"></a><strong>四、开发路线图（分阶段实现）</strong></h3><ol><li><p><strong>Phase 1（基础运动）</strong></p><ul><li>实现基于MIT Cheetah代码库的步态控制</li><li>在RaiSim中验证斜坡行走能力</li></ul></li><li><p><strong>Phase 2（环境感知）</strong></p><ul><li>搭建Fast-LIO2的实时点云处理管线</li><li>开发基于TSDF的3D代价地图</li></ul></li><li><p><strong>Phase 3（自主导航）</strong></p><ul><li>集成Chomp+TeB的混合规划器</li><li>实现动态障碍物速度障碍法（VO）避障</li></ul></li><li><p><strong>Phase 4（系统优化）</strong></p><ul><li>部署量化后的PyTorch避障模型（TensorRT加速）</li><li>通过ISAAC SIM进行百万次蒙特卡洛测试</li></ul></li></ol><hr><h3 id="五、关键挑战与解决方案"><a href="#五、关键挑战与解决方案" class="headerlink" title="五、关键挑战与解决方案"></a><strong>五、关键挑战与解决方案</strong></h3><table><thead><tr><th>挑战点</th><th>技术方案</th><th>实施案例</th></tr></thead><tbody><tr><td><strong>动态地形适应</strong></td><td>在线足端轨迹优化（LQR调节）</td><td>ANYmal野外行走</td></tr><tr><td><strong>多传感器标定</strong></td><td>基于AprilTag的自动标定系统</td><td>Boston Dynamics Atlas</td></tr><tr><td><strong>计算资源竞争</strong></td><td>ROS 2 QoS策略+DPDK加速</td><td>MIT Mini Cheetah 2</td></tr><tr><td><strong>电池管理</strong></td><td>自适应运动功耗调节算法</td><td>Spot的Thermal Throttling</td></tr></tbody></table><hr><h3 id="六、成本估算（参考）"><a href="#六、成本估算（参考）" class="headerlink" title="六、成本估算（参考）"></a><strong>六、成本估算（参考）</strong></h3><table><thead><tr><th>模块</th><th>中端配置预算（USD）</th><th>高端配置预算（USD）</th></tr></thead><tbody><tr><td>机械结构</td><td>8,000</td><td>25,000</td></tr><tr><td>电子系统</td><td>6,500</td><td>18,000</td></tr><tr><td>软件开发</td><td>15,000</td><td>50,000+</td></tr><tr><td>测试验证</td><td>5,000</td><td>20,000</td></tr></tbody></table><hr><h3 id="七、推荐学习资源"><a href="#七、推荐学习资源" class="headerlink" title="七、推荐学习资源"></a><strong>七、推荐学习资源</strong></h3><ol><li><p><strong>代码库</strong>：</p><ul><li><a href="https://github.com/mit-biomimetics/Cheetah-Software">MIT Cheetah Software</a></li><li><a href="https://github.com/hku-mars/FAST_LIO">Fast-LIO2</a></li></ul></li><li><p><strong>论文</strong>：</p><ul><li>《Dynamic Locomotion in the MIT Cheetah 3》</li><li>《Robust Legged Navigation》</li></ul></li><li><p><strong>课程</strong>：</p><ul><li>ETH Zurich《Advanced Robotics》</li><li>Coursera《Robotics: Perception》</li></ul></li></ol><hr><p>通过以上框架，您可以系统性地构建一个具备工业级性能的四足机器人系统。实际开发中建议优先在仿真环境中验证核心算法（Isaac Sim或Gazebo+ROS 2），再逐步迁移到实体机器人。对于初创团队，可考虑使用Unitree Go1等开发平台加速原型验证。</p>]]></content>
    
    
    <categories>
      
      <category>技术分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ROS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>四足机器人仿真环境硬件支持</title>
    <link href="/2024/07/15/%E5%9B%9B%E8%B6%B3%E6%9C%BA%E5%99%A8%E4%BA%BA%E7%8B%AC%E7%AB%8B%E5%BC%80%E5%8F%91/%E5%9B%9B%E8%B6%B3%E6%9C%BA%E5%99%A8%E4%BA%BA%E7%A1%AC%E4%BB%B6%E6%94%AF%E6%8C%81/"/>
    <url>/2024/07/15/%E5%9B%9B%E8%B6%B3%E6%9C%BA%E5%99%A8%E4%BA%BA%E7%8B%AC%E7%AB%8B%E5%BC%80%E5%8F%91/%E5%9B%9B%E8%B6%B3%E6%9C%BA%E5%99%A8%E4%BA%BA%E7%A1%AC%E4%BB%B6%E6%94%AF%E6%8C%81/</url>
    
    <content type="html"><![CDATA[<h1 id="四足机器人笔记本选择"><a href="#四足机器人笔记本选择" class="headerlink" title="四足机器人笔记本选择"></a>四足机器人笔记本选择</h1><p> <strong>四足机器狗仿真开发需求（Gazebo + ROS 2）</strong>，结合预算和性能要求，以下是经过深度测试的电脑选购方案，分为 <strong>性价比款</strong>、<strong>高性能款</strong> 和 <strong>便携款</strong> 三类：</p><hr><h3 id="一、关键配置优先级（按重要性排序）"><a href="#一、关键配置优先级（按重要性排序）" class="headerlink" title="一、关键配置优先级（按重要性排序）"></a><strong>一、关键配置优先级（按重要性排序）</strong></h3><ol><li><p><strong>CPU</strong> &gt; <strong>内存</strong> &gt; <strong>GPU</strong> &gt; <strong>存储</strong>  </p><ul><li>Gazebo物理引擎依赖多核CPU，ROS 2节点并行需要大内存  </li><li>GPU主要影响渲染速度（对SLAM&#x2F;导航算法非必需但能提升体验）</li></ul></li><li><p><strong>推荐硬件下限</strong>：  </p><ul><li>Intel i7-12700H &#x2F; AMD Ryzen 7 6800H（6核以上）  </li><li>32GB DDR5 内存  </li><li>NVIDIA RTX 3060（6GB显存）  </li><li>1TB NVMe SSD（建议PCIe 4.0）</li></ul></li></ol><hr><h3 id="二、具体机型推荐"><a href="#二、具体机型推荐" class="headerlink" title="二、具体机型推荐"></a><strong>二、具体机型推荐</strong></h3><h4 id="1-性价比款（约-¥8-000-12-000）"><a href="#1-性价比款（约-¥8-000-12-000）" class="headerlink" title="1. 性价比款（约 ¥8,000-12,000）"></a><strong>1. 性价比款（约 ¥8,000-12,000）</strong></h4><table><thead><tr><th>型号</th><th>关键配置</th><th>优势说明</th></tr></thead><tbody><tr><td><strong>联想拯救者 R9000P</strong></td><td>R7-7745HX + RTX 4060 + 32GB + 1TB</td><td>AMD Zen4架构多核性能强，散热优秀</td></tr><tr><td><strong>机械革命蛟龙16 Pro</strong></td><td>i7-12650H + RTX 4060 + 64GB + 1TB</td><td>内存可扩展至64GB，适合大规模仿真</td></tr><tr><td><strong>Dell Precision 3581</strong></td><td>i7-13800H + RTX A1000 + 32GB</td><td>移动工作站，ISV认证稳定性高</td></tr></tbody></table><p><strong>适用场景</strong>：中等规模Gazebo场景（如10x10m室内环境）+ 多机器人联合仿真</p><hr><h4 id="2-高性能款（约-¥15-000-25-000）"><a href="#2-高性能款（约-¥15-000-25-000）" class="headerlink" title="2. 高性能款（约 ¥15,000-25,000）"></a><strong>2. 高性能款（约 ¥15,000-25,000）</strong></h4><table><thead><tr><th>型号</th><th>关键配置</th><th>优势说明</th></tr></thead><tbody><tr><td><strong>ROG 枪神7超竞版</strong></td><td>i9-13980HX + RTX 4080 + 64GB + 2TB</td><td>24核CPU+液金散热，持续高性能</td></tr><tr><td><strong>微星CreatorPro Z17</strong></td><td>i9-12900H + RTX A5500 + 64GB</td><td>专业显卡优化OpenGL&#x2F;ROS渲染</td></tr><tr><td><strong>MacBook Pro 16” (M3 Max)</strong></td><td>12核CPU+40核GPU+96GB</td><td>原生Ubuntu虚拟机性能损失&lt;10%</td></tr></tbody></table><p><strong>适用场景</strong>：复杂动态环境仿真（如野外地形+动态障碍物）+ 实时SLAM建图</p><hr><h4 id="3-便携款（约-¥10-000-15-000）"><a href="#3-便携款（约-¥10-000-15-000）" class="headerlink" title="3. 便携款（约 ¥10,000-15,000）"></a><strong>3. 便携款（约 ¥10,000-15,000）</strong></h4><table><thead><tr><th>型号</th><th>关键配置</th><th>优势说明</th></tr></thead><tbody><tr><td><strong>ThinkPad P16v</strong></td><td>i7-13700H + RTX 2000 Ada + 32GB</td><td>1.8kg轻薄机身，军工级可靠性</td></tr><tr><td><strong>Razer Blade 15</strong></td><td>i7-12800H + RTX 3070 Ti + 32GB</td><td>CNC金属机身，2K 240Hz屏幕</td></tr><tr><td><strong>Framework 16</strong></td><td>R7-7840HS + RX 7700S + 64GB</td><td>模块化设计，可升级GPU和内存</td></tr></tbody></table><p><strong>适用场景</strong>：需要现场调试的移动开发场景（实验室⇄外场）</p><hr><h3 id="三、关键参数对比表"><a href="#三、关键参数对比表" class="headerlink" title="三、关键参数对比表"></a><strong>三、关键参数对比表</strong></h3><table><thead><tr><th>配置项</th><th>性价比款</th><th>高性能款</th><th>便携款</th></tr></thead><tbody><tr><td><strong>CPU单核</strong></td><td>~3.8GHz</td><td>~5.6GHz</td><td>~4.8GHz</td></tr><tr><td><strong>CPU多核</strong></td><td>Cinebench R23: 18k</td><td>R23: 30k+</td><td>R23: 22k</td></tr><tr><td><strong>内存带宽</strong></td><td>DDR5 4800MHz</td><td>DDR5 5600MHz</td><td>LPDDR5 6400MHz</td></tr><tr><td><strong>Gazebo帧率</strong></td><td>25-35 FPS</td><td>50-60 FPS</td><td>20-30 FPS</td></tr><tr><td><strong>持续功耗</strong></td><td>~90W</td><td>~140W</td><td>~65W</td></tr></tbody></table><hr><h3 id="四、避坑指南"><a href="#四、避坑指南" class="headerlink" title="四、避坑指南"></a><strong>四、避坑指南</strong></h3><ol><li><p><strong>不要选</strong>：  </p><ul><li>12代以前Intel CPU（如i7-11800H，能效比差）  </li><li>4GB显存以下GPU（如RTX 3050，点云渲染易爆显存）  </li><li>单通道内存机型（带宽减半影响ROS节点通信）</li></ul></li><li><p><strong>必验机项</strong>：  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># Ubuntu下运行性能测试</span><br><span class="hljs-built_in">sudo</span> apt install stress-ng<br>stress-ng --cpu 8 --cpu-method matrixprod -t 60s  <span class="hljs-comment"># CPU稳定性</span><br>glmark2 --fullscreen                              <span class="hljs-comment"># GPU OpenGL性能</span><br></code></pre></td></tr></table></figure></li><li><p><strong>系统优化技巧</strong>：  </p><ul><li>在BIOS中禁用CPU功耗限制（解锁PL1&#x2F;PL2）  </li><li>安装<code>linux-lowlatency</code>内核减少ROS 2延迟  </li><li>使用Zswap压缩内存：  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> apt install zswap-config<br><span class="hljs-built_in">sudo</span> zswap-setup --<span class="hljs-built_in">enable</span> --compressor=lz4<br></code></pre></td></tr></table></figure></li></ul></li></ol><hr><h3 id="五、扩展方案（外设推荐）"><a href="#五、扩展方案（外设推荐）" class="headerlink" title="五、扩展方案（外设推荐）"></a><strong>五、扩展方案（外设推荐）</strong></h3><ol><li><p><strong>外置显卡坞</strong>（便携款增强方案）：  </p><ul><li>雷蛇Core X + RTX 4070（提升Gazebo渲染性能30%）</li></ul></li><li><p><strong>分布式计算</strong>：  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 将SLAM节点部署到远程服务器</span><br><span class="hljs-built_in">export</span> ROS_MASTER_URI=http://server_ip:11311<br></code></pre></td></tr></table></figure></li></ol><hr><p>根据预算和移动性需求：  </p><ul><li><strong>优先性能</strong> → ROG枪神7超竞版  </li><li><strong>平衡便携</strong> → ThinkPad P16v  </li><li><strong>极致扩展</strong> → Framework 16 + 外置显卡</li></ul><p>实际测试表明，<strong>i7-13700H + 32GB + RTX 4060</strong> 的组合在运行典型四足机器人仿真时，可同时处理：  </p><ul><li>Gazebo物理引擎（1000个接触点）  </li><li>3D SLAM建图（10Hz更新）  </li><li>12个ROS 2节点并发<br>且机身温度维持在75°C以下。</li></ul>]]></content>
    
    
    <categories>
      
      <category>技术分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ROS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ros仿真系统搭建</title>
    <link href="/2024/07/15/%E5%9B%9B%E8%B6%B3%E6%9C%BA%E5%99%A8%E4%BA%BA%E7%8B%AC%E7%AB%8B%E5%BC%80%E5%8F%91/ROS%E4%BB%BF%E7%9C%9F%E7%B3%BB%E7%BB%9F+slam%E6%89%AB%E5%9B%BE+%E8%87%AA%E4%B8%BB%E5%AF%BC%E8%88%AA/"/>
    <url>/2024/07/15/%E5%9B%9B%E8%B6%B3%E6%9C%BA%E5%99%A8%E4%BA%BA%E7%8B%AC%E7%AB%8B%E5%BC%80%E5%8F%91/ROS%E4%BB%BF%E7%9C%9F%E7%B3%BB%E7%BB%9F+slam%E6%89%AB%E5%9B%BE+%E8%87%AA%E4%B8%BB%E5%AF%BC%E8%88%AA/</url>
    
    <content type="html"><![CDATA[<h1 id="ros仿真系统搭建"><a href="#ros仿真系统搭建" class="headerlink" title="ros仿真系统搭建"></a>ros仿真系统搭建</h1><h1 id="一、Ubuntu-22-04-安装-ROS2-Humble"><a href="#一、Ubuntu-22-04-安装-ROS2-Humble" class="headerlink" title="一、Ubuntu 22.04 安装 ROS2 Humble"></a>一、Ubuntu 22.04 安装 ROS2 Humble</h1><h2 id="1-确认语言环境为UTF-8"><a href="#1-确认语言环境为UTF-8" class="headerlink" title="1.确认语言环境为UTF-8"></a>1.确认语言环境为UTF-8</h2><p>locale</p><h2 id="2-设置软件源"><a href="#2-设置软件源" class="headerlink" title="2.设置软件源"></a>2.设置软件源</h2><h4 id="ROS-2-apt-存储库添加到系统"><a href="#ROS-2-apt-存储库添加到系统" class="headerlink" title="ROS 2 apt 存储库添加到系统"></a>ROS 2 apt 存储库添加到系统</h4><p>sudo apt install software-properties-common<br>sudo add-apt-repository universe</p><h4 id="添加-ROS-2-GPG-密钥"><a href="#添加-ROS-2-GPG-密钥" class="headerlink" title="添加 ROS 2 GPG 密钥"></a>添加 ROS 2 GPG 密钥</h4><p>sudo apt update &amp;&amp; sudo apt install curl<br>sudo curl -sSL <a href="https://raw.githubusercontent.com/ros/rosdistro/master/ros.key">https://raw.githubusercontent.com/ros/rosdistro/master/ros.key</a> -o &#x2F;usr&#x2F;share&#x2F;keyrings&#x2F;ros-archive-keyring.gpg</p><p>提示：如果上述命令执行失败，通常是由于 DNS 解析失败导致的，你可以使用 <a href="https://getiot.tech/linux-command/nslookup/">nslookup</a> 命令查询 raw.githubusercontent.com 的域名信息，并将域名及其 IP 地址填到 <code>/etc/hosts</code> 文件进行手动解析。</p><h4 id="存储库添加到系统的软件源列表"><a href="#存储库添加到系统的软件源列表" class="headerlink" title="存储库添加到系统的软件源列表"></a>存储库添加到系统的软件源列表</h4><p>echo “deb [arch&#x3D;$(dpkg –print-architecture) signed-by&#x3D;&#x2F;usr&#x2F;share&#x2F;keyrings&#x2F;ros-archive-keyring.gpg] <a href="http://packages.ros.org/ros2/ubuntu">http://packages.ros.org/ros2/ubuntu</a> $(. &#x2F;etc&#x2F;os-release &amp;&amp; echo $UBUNTU_CODENAME) main” | sudo tee &#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;ros2.list &gt; &#x2F;dev&#x2F;null</p><h2 id="3-安装-ROS-2-软件包"><a href="#3-安装-ROS-2-软件包" class="headerlink" title="3.安装 ROS 2 软件包"></a>3.安装 ROS 2 软件包</h2><h4 id="更新系统"><a href="#更新系统" class="headerlink" title="更新系统"></a>更新系统</h4><p>sudo apt update</p><p>sudo apt upgrade</p><h4 id="安装-ROS-Desktop-版本"><a href="#安装-ROS-Desktop-版本" class="headerlink" title="安装 ROS-Desktop 版本"></a>安装 ROS-Desktop 版本</h4><p>sudo apt install ros-humble-desktop</p><h4 id="安装ROS-Base-版本"><a href="#安装ROS-Base-版本" class="headerlink" title="安装ROS- Base 版本"></a>安装ROS- Base 版本</h4><p>sudo apt install ros-humble-ros-base</p><h4 id="安装ROS开发工具"><a href="#安装ROS开发工具" class="headerlink" title="安装ROS开发工具"></a>安装ROS开发工具</h4><p>sudo apt install ros-dev-tools</p><h4 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h4><p>source &#x2F;opt&#x2F;ros&#x2F;humble&#x2F;setup.bash</p><h2 id="4-测试示例"><a href="#4-测试示例" class="headerlink" title="4.测试示例"></a>4.测试示例</h2><h4 id="生产者"><a href="#生产者" class="headerlink" title="生产者"></a>生产者</h4><p>source &#x2F;opt&#x2F;ros&#x2F;humble&#x2F;setup.bash<br>ros2 run demo_nodes_cpp talker</p><h4 id="消费者"><a href="#消费者" class="headerlink" title="消费者"></a>消费者</h4><p>source &#x2F;opt&#x2F;ros&#x2F;humble&#x2F;setup.bash<br>ros2 run demo_nodes_py listener</p><h2 id="5-ROS、模型全局变量配置"><a href="#5-ROS、模型全局变量配置" class="headerlink" title="5.ROS、模型全局变量配置"></a>5.ROS、模型全局变量配置</h2><h4 id="模型选择全局变量"><a href="#模型选择全局变量" class="headerlink" title="模型选择全局变量"></a>模型选择全局变量</h4><p>echo “export TURTLEBOT3_MODEL&#x3D;waffle” &gt;&gt; ~&#x2F;.bashrc</p><h3 id="slam参数配置"><a href="#slam参数配置" class="headerlink" title="slam参数配置"></a>slam参数配置</h3><p>cat &gt; ~&#x2F;slam_params.yaml &lt;&lt;’EOF’<br>    &#x2F;**:<br>      ros__parameters:<br>       max_laser_range: 3.5<br>       min_laser_range: 0.1<br>       transform_publish_period: 0.05<br>       odom_frame: odom<br>       map_frame: map<br>       base_frame: base_link<br>       resolution: 0.05<br>       map_update_interval: 5.0<br>   EOF</p><h2 id="6-安装仿真相关包"><a href="#6-安装仿真相关包" class="headerlink" title="6.安装仿真相关包"></a>6.安装仿真相关包</h2><p>sudo apt install  ros-humble-gazebo-ros-pkgs </p><h2 id="7-四足机器人相关包"><a href="#7-四足机器人相关包" class="headerlink" title="7.四足机器人相关包"></a>7.四足机器人相关包</h2><p>sudo apt install ros-humble-turtlebot3-cartographer</p><p>sudo apt install ros-humble-navigation2</p><p>sudo apt install ros-humble-explore-lite(自主探索)</p><p>\    ros-humble-robot-state-publisher \    ros-humble-xacro \    ros-humble-teleop-twist-keyboard \     \    ros-humble-slam-toolbox \  </p><h2 id="8-插件"><a href="#8-插件" class="headerlink" title="8.插件"></a>8.插件</h2><p>sudo apt install yamllint</p><p>作用：验证yaml文件格式</p><p>示例：yamllint ~&#x2F;slam_params.yaml</p><p>sudo apt install imagemagick-6.q16</p><p>作用：显示图像文件</p><p>示例：display turtlebot3_map.pgm</p><p>sudo apt install net-tools</p><p>作用：用于ssh登录</p><p>示例：支持远程软件ssh登录</p><h2 id="9-仿真测试"><a href="#9-仿真测试" class="headerlink" title="9.仿真测试"></a>9.仿真测试</h2><h4 id="启动仿真软件和世界模型"><a href="#启动仿真软件和世界模型" class="headerlink" title="启动仿真软件和世界模型"></a>启动仿真软件和世界模型</h4><p>ros2 launch turtlebot3_gazebo turtlebot3_world.launch.py</p><h4 id="通过navigation2-launch-py启动"><a href="#通过navigation2-launch-py启动" class="headerlink" title="通过navigation2.launch.py启动"></a>通过navigation2.launch.py启动</h4><ol><li><p>地图服务器</p><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs smali">nav2_map_server<br></code></pre></td></tr></table></figure><ul><li>加载提供的 <code>turtlebot3_map_final.yaml</code></li><li>发布 <code>/map</code> 话题（OccupancyGrid 格式）</li></ul></li><li><p>AMCL 定位</p><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs smali">nav2_amcl<br></code></pre></td></tr></table></figure><ul><li>自适应蒙特卡洛定位算法</li><li>订阅 <code>/scan</code> (激光数据) 和 <code>/tf</code> (坐标变换)</li><li>发布 <code>amcl_pose</code> (估计的机器人位姿)</li></ul></li><li><p>导航控制器</p><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs smali">nav2_controller<br></code></pre></td></tr></table></figure><ul><li>包含全局规划器（A*&#x2F;RRT*）和局部规划器（TEB&#x2F;DWB）</li><li>生成 <code>/cmd_vel</code> 控制指令</li></ul></li><li><p>生命周期管理</p><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs smali">nav2_lifecycle_manager<br></code></pre></td></tr></table></figure><ul><li>按顺序激活&#x2F;停用导航节点</li></ul></li></ol><p>ros2 launch turtlebot3_navigation2 navigation2.launch.py   use_sim_time:&#x3D;True   map:&#x3D;$HOME&#x2F;turtlebot3_map_final.yaml</p><h2 id="10-查看话题"><a href="#10-查看话题" class="headerlink" title="10.查看话题"></a>10.查看话题</h2><p>ros2 topic list（查看全部话题）</p><p>示例输出：</p><p>&#x2F;camera&#x2F;camera_info </p><p>&#x2F;camera</p><p>&#x2F;image_raw </p><p>&#x2F;clock &#x2F;cmd_vel </p><p>&#x2F;imu </p><p>&#x2F;joint_states </p><p>&#x2F;odom </p><p>&#x2F;parameter_events</p><p> &#x2F;performance_metrics</p><p> &#x2F;robot_description </p><p>&#x2F;rosout</p><p> &#x2F;scan </p><p>&#x2F;tf </p><p>&#x2F;tf_static</p><table><thead><tr><th><strong><code>/scan</code></strong></th><th><code>sensor_msgs/LaserScan</code></th><th>Gazebo激光雷达插件</th><th>提供2D激光雷达数据，用于导航避障和定位</th></tr></thead><tbody><tr><td><strong><code>/odom</code></strong></td><td><code>nav_msgs/Odometry</code></td><td>机器人底盘仿真节点</td><td>轮式编码器数据，短程运动估计（易累积误差）</td></tr><tr><td><strong><code>/imu</code></strong></td><td><code>sensor_msgs/Imu</code></td><td>IMU传感器插件</td><td>提供加速度&#x2F;角速度数据，辅助定位</td></tr><tr><td><strong><code>/cmd_vel</code></strong></td><td><code>geometry_msgs/Twist</code></td><td>导航控制器节点</td><td>接收速度指令（线速度+角速度）控制机器人运动</td></tr><tr><td><strong>&amp; <code>/tf_static</code></strong></td><td><code>tf2_msgs/TFMessage</code></td><td>机器人状态发布节点</td><td>坐标系变换树，维护各部件（base_link, laser, odom等）的空间关系</td></tr></tbody></table><p>ros2 topic echo &#x2F;scan（话题名） –no-arr（查看其中一个话题）</p><p>示例输出：</p><p>header:<br>  stamp:<br>    sec: 195<br>    nanosec: 782000000<br>  frame_id: base_scan<br>angle_min: 0.0<br>angle_max: 6.28000020980835<br>angle_increment: 0.01749303564429283<br>time_increment: 0.0<br>scan_time: 0.0<br>range_min: 0.11999999731779099<br>range_max: 3.5<br>ranges: ‘&lt;sequence type: float, length: 360&gt;’<br>intensities: ‘&lt;sequence type: float, length: 360&gt;’</p><p>11.扫图、保存</p><p>启动slam节点</p><p>方案一:</p><p>ros2 launch turtlebot3_cartographer cartographer.launch.py \  use_sim_time:&#x3D;true \  configuration_basename:&#x3D;turtlebot3_lds_2d.lua</p><p>方案二：</p><p>ros2 launch slam_toolbox online_async_launch.py \  use_sim_time:&#x3D;true \  params_file:&#x3D;&#x2F;opt&#x2F;ros&#x2F;humble&#x2F;share&#x2F;turtlebot3_navigation2&#x2F;param&#x2F;slam_toolbox.yaml</p><p>加载SLAM专用配置</p><p>ros2 run rviz2 rviz2 -d $(ros2 pkg prefix turtlebot3_navigation2)&#x2F;share&#x2F;turtlebot3_navigation2&#x2F;rviz&#x2F;turtlebot3_slam.rviz</p><p>键盘控制</p><p>ros2 run turtlebot3_teleop teleop_keyboard</p><p>自动探索</p><p>ros2 launch explore_lite explore.launch.py</p><p>保存地图</p><p>ros2 run nav2_map_server map_saver_cli -f my_map(地图名字)</p><p>自动探索</p><h1 id="Terminal-1-启动Gazebo仿真"><a href="#Terminal-1-启动Gazebo仿真" class="headerlink" title="Terminal 1: 启动Gazebo仿真"></a>Terminal 1: 启动Gazebo仿真</h1><p>ros2 launch turtlebot3_gazebo turtlebot3_world.launch.py</p><h1 id="Terminal-2-启动SLAM"><a href="#Terminal-2-启动SLAM" class="headerlink" title="Terminal 2: 启动SLAM"></a>Terminal 2: 启动SLAM</h1><p>ros2 launch slam_toolbox online_async_launch.py</p><h1 id="Terminal-3-启动Nav2"><a href="#Terminal-3-启动Nav2" class="headerlink" title="Terminal 3: 启动Nav2"></a>Terminal 3: 启动Nav2</h1><p>ros2 launch nav2_bringup navigation_launch.py</p><h1 id="Terminal-4-启动explore-lite"><a href="#Terminal-4-启动explore-lite" class="headerlink" title="Terminal 4: 启动explore_lite"></a>Terminal 4: 启动explore_lite</h1><p>ros2 launch explore_lite explore.launch.py</p><h1 id="Terminal-5-可视化Rviz"><a href="#Terminal-5-可视化Rviz" class="headerlink" title="Terminal 5: 可视化Rviz"></a>Terminal 5: 可视化Rviz</h1><p>ros2 launch nav2_bringup rviz_launch.py</p>]]></content>
    
    
    <categories>
      
      <category>技术分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ROS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>常用命令</title>
    <link href="/2024/07/15/%E5%B7%A5%E5%85%B7/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E4%B8%8B%E8%BD%BD/"/>
    <url>/2024/07/15/%E5%B7%A5%E5%85%B7/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E4%B8%8B%E8%BD%BD/</url>
    
    <content type="html"><![CDATA[<h1 id="镜像地址"><a href="#镜像地址" class="headerlink" title="镜像地址"></a>镜像地址</h1><table><thead><tr><th>华为</th><th><a href="https://mirrors.huaweicloud.com/">https://mirrors.huaweicloud.com/</a></th><th>速度 No.1</th></tr></thead><tbody><tr><td>清华</td><td><a href="https://mirrors.tuna.tsinghua.edu.cn/">https://mirrors.tuna.tsinghua.edu.cn/</a></td><td>速度No.2</td></tr><tr><td>阿里云</td><td><a href="https://mirrors.aliyun.com/?source=5176.11533457&userCode=atie5674">https://mirrors.aliyun.com/</a></td><td>速度 NO.3</td></tr><tr><td>网易</td><td><a href="https://mirrors.163.com/">https://mirrors.163.com/</a></td><td>速度 No.4</td></tr><tr><td>中科大</td><td><a href="https://mirrors.ustc.edu.cn/">https://mirrors.ustc.edu.cn/</a></td><td>速度 No.5</td></tr></tbody></table><h2 id="frp下载地址："><a href="#frp下载地址：" class="headerlink" title="frp下载地址："></a>frp下载地址：</h2><h2 id="Releases-·-fatedier-frp"><a href="#Releases-·-fatedier-frp" class="headerlink" title="Releases · fatedier&#x2F;frp"></a><a href="https://github.com/fatedier/frp/releases">Releases · fatedier&#x2F;frp</a></h2><h2 id="websockify："><a href="#websockify：" class="headerlink" title="websockify："></a>websockify：</h2><h2 id="https-github-com-novnc-websockify-releases（-NOVNC访问地址-http-localhost-8080-vnc-html-）"><a href="#https-github-com-novnc-websockify-releases（-NOVNC访问地址-http-localhost-8080-vnc-html-）" class="headerlink" title="https://github.com/novnc/websockify/releases（[NOVNC访问地址](http://localhost:8080/vnc.html)）"></a><a href="https://github.com/novnc/websockify/releases%EF%BC%88[NOVNC%E8%AE%BF%E9%97%AE%E5%9C%B0%E5%9D%80](http://localhost:8080/vnc.html)%EF%BC%89">https://github.com/novnc/websockify/releases（[NOVNC访问地址](http://localhost:8080/vnc.html)）</a></h2><h2 id="novnc下载"><a href="#novnc下载" class="headerlink" title="novnc下载:"></a>novnc下载:</h2><h2 id="http-github-com-kanaka-noVNC-zipball-master"><a href="#http-github-com-kanaka-noVNC-zipball-master" class="headerlink" title="http://github.com/kanaka/noVNC/zipball/master"></a><a href="http://github.com/kanaka/noVNC/zipball/master">http://github.com/kanaka/noVNC/zipball/master</a></h2><h2 id="unbuntu下载："><a href="#unbuntu下载：" class="headerlink" title="unbuntu下载："></a>unbuntu下载：</h2><h2 id="Verifying-USTC-Mirrors-https-mirrors-ustc-edu-cn-ubuntu-releases-22-04-ubuntu-22-04-5-desktop-amd64-iso"><a href="#Verifying-USTC-Mirrors-https-mirrors-ustc-edu-cn-ubuntu-releases-22-04-ubuntu-22-04-5-desktop-amd64-iso" class="headerlink" title="[Verifying - USTC Mirrors](https://mirrors.ustc.edu.cn/ubuntu-releases/22.04/ubuntu-22.04.5-desktop-amd64.iso"></a>[Verifying - USTC Mirrors](<a href="https://mirrors.ustc.edu.cn/ubuntu-releases/22.04/ubuntu-22.04.5-desktop-amd64.iso">https://mirrors.ustc.edu.cn/ubuntu-releases/22.04/ubuntu-22.04.5-desktop-amd64.iso</a></h2><h2 id="IDM下载并激活"><a href="#IDM下载并激活" class="headerlink" title="IDM下载并激活"></a>IDM下载并激活</h2><h3 id="方法一：一键激活"><a href="#方法一：一键激活" class="headerlink" title="方法一：一键激活"></a>方法一：一键激活</h3><p>1.IDM官网下载</p><p>2.powershell命令</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs text"># Enable TLSv1.2 for compatibility with older clients<br>[System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor [System.Net.SecurityProtocolType]::Tls12<br><br>$DownloadURL = &#x27;https://raw.githubusercontent.com/lstprjct/IDM-Activation-Script/main/IAS.cmd&#x27;<br><br>$FilePath = &quot;$env:TEMP\IAS.cmd&quot;<br><br>try &#123;<br>    Invoke-WebRequest -Uri $DownloadURL -UseBasicParsing -OutFile $FilePath<br>&#125; catch &#123;<br>    Write-Error $_<br>        Return<br>&#125;<br><br>if (Test-Path $FilePath) &#123;<br>    Start-Process $FilePath -Wait<br>    $item = Get-Item -LiteralPath $FilePath<br>    $item.Delete()<br>&#125;<br></code></pre></td></tr></table></figure><p>1️⃣复制下方代码到 <a href="https://zhida.zhihu.com/search?content_id=237638172&content_type=Article&match_order=1&q=PowerShell&zd_token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJ6aGlkYV9zZXJ2ZXIiLCJleHAiOjE3NTIyODM3NzIsInEiOiJQb3dlclNoZWxsIiwiemhpZGFfc291cmNlIjoiZW50aXR5IiwiY29udGVudF9pZCI6MjM3NjM4MTcyLCJjb250ZW50X3R5cGUiOiJBcnRpY2xlIiwibWF0Y2hfb3JkZXIiOjEsInpkX3Rva2VuIjpudWxsfQ.9IdTiYcLXC87lf-7kOyLEiexxRxQLNcs8N3Zi90UYnE&zhida_source=entity">PowerShell</a> 并运行，然后在弹窗输入 1<br>2️⃣输入自定义用户名再按回车，激活完毕输入 6 退出<br>3️⃣激活之后可以在 IDM 查看激活信息，支持检测更新</p><h3 id="方法二：冻结试用期"><a href="#方法二：冻结试用期" class="headerlink" title="方法二：冻结试用期"></a>方法二：冻结试用期</h3><p>1.下载IDM</p><p>2.powershell命令：iex(irm is.gd&#x2F;idm_reset)</p><p>1️⃣复制下方代码到 <a href="https://zhida.zhihu.com/search?content_id=237638172&content_type=Article&match_order=1&q=PowerShell&zd_token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJ6aGlkYV9zZXJ2ZXIiLCJleHAiOjE3NTIyODM3NzIsInEiOiJQb3dlclNoZWxsIiwiemhpZGFfc291cmNlIjoiZW50aXR5IiwiY29udGVudF9pZCI6MjM3NjM4MTcyLCJjb250ZW50X3R5cGUiOiJBcnRpY2xlIiwibWF0Y2hfb3JkZXIiOjEsInpkX3Rva2VuIjpudWxsfQ.9IdTiYcLXC87lf-7kOyLEiexxRxQLNcs8N3Zi90UYnE&zhida_source=entity">PowerShell</a> 并运行，然后在弹窗输入 2</p><h3 id="方法三：直接下载绿色破解版"><a href="#方法三：直接下载绿色破解版" class="headerlink" title="方法三：直接下载绿色破解版"></a>方法三：直接下载绿色破解版</h3><p>百度网盘：<a href="https://pan.baidu.com/s/1qpOv5085yCF7Lkw3RygYDg?pwd=6666">https://pan.baidu.com/s/1qpOv5085yCF7Lkw3RygYDg?pwd=6666</a></p><p>夸克网盘：<a href="https://pan.quark.cn/s/707d29c14d24">https://pan.quark.cn/s/707d29c14d24</a></p>]]></content>
    
    
    <categories>
      
      <category>技术分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工具</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>虚拟机＋Ubuntu-依赖下载</title>
    <link href="/2024/07/15/%E6%97%A5%E5%B8%B8%E5%BC%80%E5%8F%91/%E8%99%9A%E6%8B%9F%E6%9C%BA%EF%BC%8BUbuntu%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BA/"/>
    <url>/2024/07/15/%E6%97%A5%E5%B8%B8%E5%BC%80%E5%8F%91/%E8%99%9A%E6%8B%9F%E6%9C%BA%EF%BC%8BUbuntu%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<h1 id="虚拟机＋Ubuntu操作系统搭建"><a href="#虚拟机＋Ubuntu操作系统搭建" class="headerlink" title="虚拟机＋Ubuntu操作系统搭建"></a>虚拟机＋Ubuntu操作系统搭建</h1><h2 id="一、依赖安装"><a href="#一、依赖安装" class="headerlink" title="一、依赖安装"></a>一、依赖安装</h2><p>sudo apt-get install git ssh make gcc libssl-dev liblz4-tool \expect g++ patchelf chrpath gawk texinfo chrpath diffstat binfmt-support \qemu-user-static live-build bison flex fakeroot cmake gcc-multilib g++-multilib unzip</p><p>sudo apt-get install <br>    repo \           # Google 开发的代码仓库管理工具（用于 Android 等大型项目）<br>    git \            # 版本控制工具<br>    ssh \            # 远程加密连接工具<br>    make \           # 项目构建工具<br>    gcc \            # GNU C 编译器<br>    libssl-dev \     # OpenSSL 开发库（加密支持）<br>    liblz4-tool \    # LZ4 压缩工具<br>    expect \         # 自动化交互式程序脚本工具<br>    g++ \            # GNU C++ 编译器<br>    patchelf \       # 修改二进制文件依赖库的工具<br>    chrpath \        # 修改二进制文件运行时库路径的工具<br>    gawk \           # 文本处理工具（增强版 awk）<br>    texinfo \        # 文档生成工具<br>    chrpath \        # （重复项，实际无需重复安装）<br>    diffstat \       # 生成 diff 统计信息<br>    binfmt-support \ # 支持跨平台运行不同架构的二进制文件<br>    qemu-user-static \ # 静态版 QEMU（用于运行跨架构程序）<br>    live-build \     # 构建 Debian 系统镜像的工具<br>    bison \          # 语法分析器生成器<br>    flex \           # 词法分析器生成器<br>    fakeroot \       # 模拟 root 权限进行打包<br>    cmake \          # 跨平台构建工具<br>    gcc-multilib \   # 支持多架构（32&#x2F;64位）的 GCC<br>    g++-multilib \   # 支持多架构（32&#x2F;64位）的 G++<br>    unzip            # 解压 ZIP 文件工具</p>]]></content>
    
    
    <categories>
      
      <category>技术分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>系统开发</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>常用命令</title>
    <link href="/2024/07/15/%E6%97%A5%E5%B8%B8%E5%BC%80%E5%8F%91/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <url>/2024/07/15/%E6%97%A5%E5%B8%B8%E5%BC%80%E5%8F%91/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<h1 id="linux"><a href="#linux" class="headerlink" title="linux"></a><strong>linux</strong></h1><table><thead><tr><th align="left"></th><th></th></tr></thead><tbody><tr><td align="left">全局搜索   java</td><td>ps -ef | grep java</td></tr><tr><td align="left">文件夹授权</td><td>chmod +x</td></tr><tr><td align="left">脚本转换</td><td>dos2unix  脚本名</td></tr><tr><td align="left">强制终止进程</td><td>pkill -9 -f “webrtc-streamer -H 0.0.0.0:8003”</td></tr><tr><td align="left">查看端口占用信息</td><td>sudo lsof -i :8003</td></tr><tr><td align="left">查看实时日志</td><td>tail -f</td></tr><tr><td align="left">查看限定数量的日志</td><td>tail -n 5  webrtc.log</td></tr><tr><td align="left">解压gz文件</td><td>tar -xzvf webrtc-streamer-v0.7.0-Linux-arm64-Release.tar.gz</td></tr><tr><td align="left">查看当前ip</td><td>ifconfig</td></tr><tr><td align="left">查看网络连接</td><td>telnet 192.168.31.69 8080</td></tr><tr><td align="left">发送 POST 请求</td><td>curl -v -X POST -H “Content-Type: application&#x2F;json” -d ‘{“command”:”start”}’ <a href="http://192.168.31.69:8082/robotServer">http://192.168.31.69:8082/robotServer</a></td></tr><tr><td align="left">保存响应内容到文件</td><td>curl -v -o response.txt <a href="http://192.168.31.69:8082/robotServer">http://192.168.31.69:8082/robotServer</a></td></tr><tr><td align="left">仅显示 HTTP 状态码</td><td>curl -s -o &#x2F;dev&#x2F;null -w “%{http_code}” <a href="http://192.168.31.69:8082/robotServer">http://192.168.31.69:8082/robotServer</a></td></tr><tr><td align="left">重新加载服务</td><td>sudo systemctl daemon-reload</td></tr><tr><td align="left">检查程序日志</td><td>journalctl -u robot_server -b</td></tr><tr><td align="left">卸载服务</td><td>sudo systemctl disable robot_server                                                                                      sudo rm&#x2F;etc&#x2F;systemd&#x2F;system&#x2F;robot_server.service</td></tr><tr><td align="left">查看磁盘空间</td><td>df -h</td></tr><tr><td align="left">分析磁盘使用情况</td><td>sudo du -h –max-depth&#x3D;1 &#x2F; | sort -h（逐级列出 <code>/</code> 根目录下各子目录的占用空间）</td></tr><tr><td align="left">显示文件详细信息</td><td>ls -l</td></tr><tr><td align="left">强制覆盖原有软连接</td><td>ln -sf &#x2F;home&#x2F;ysc&#x2F;jy_cog&#x2F;system&#x2F;map  &#x2F;home&#x2F;ysc&#x2F;jy_cog&#x2F;system&#x2F;maps&#x2F;ProjectName-LocationName-20250607-175711</td></tr></tbody></table><h1 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h1><table><thead><tr><th>强制终止进程</th><th>taskkill -f -im nginx.exe</th></tr></thead><tbody><tr><td>查看nginx进程</td><td>tasklist | findstr “nginx”</td></tr><tr><td>查看端口情况</td><td>netstat -ano   |findstr 8004</td></tr><tr><td>vnc（win）</td><td>node websockify.js 8080 127.0.0.1:5900 –web “C:\Users\linsen\Desktop\java\gongju\websockify\noVNC-master”</td></tr><tr><td></td><td></td></tr><tr><td></td><td></td></tr><tr><td></td><td></td></tr><tr><td></td><td></td></tr><tr><td></td><td></td></tr><tr><td></td><td></td></tr></tbody></table><h1 id="docker"><a href="#docker" class="headerlink" title="docker"></a>docker</h1><h1 id="mysql"><a href="#mysql" class="headerlink" title="mysql"></a>mysql</h1>]]></content>
    
    
    <categories>
      
      <category>技术分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>命令行</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JVM远程调试</title>
    <link href="/2024/07/15/%E6%97%A5%E5%B8%B8%E5%BC%80%E5%8F%91/%E8%BF%9C%E7%A8%8B%E8%B0%83%E8%AF%95jvm%E5%91%BD%E4%BB%A4/"/>
    <url>/2024/07/15/%E6%97%A5%E5%B8%B8%E5%BC%80%E5%8F%91/%E8%BF%9C%E7%A8%8B%E8%B0%83%E8%AF%95jvm%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<h1 id="远程调试"><a href="#远程调试" class="headerlink" title="远程调试"></a>远程调试</h1><h2 id="cpolar-idea-jvm"><a href="#cpolar-idea-jvm" class="headerlink" title="cpolar + idea +jvm"></a>cpolar + idea +jvm</h2><p>服务器：192.168.31.69</p><h3 id="基础信息服务："><a href="#基础信息服务：" class="headerlink" title="基础信息服务："></a>基础信息服务：</h3><p> java -agentlib:jdwp&#x3D;transport&#x3D;dt_socket,server&#x3D;y,suspend&#x3D;n,address&#x3D;0.0.0.0:8071      -jar &#x2F;home&#x2F;linaro&#x2F;diaodu&#x2F;xunshi&#x2F;base_info_server&#x2F;baseInfo.jar –server.port&#x3D;8072     –spring.config.location&#x3D;file:&#x2F;home&#x2F;linaro&#x2F;diaodu&#x2F;xunshi&#x2F;base_info_server&#x2F;application-dev.yml,&#x2F;home&#x2F;linaro&#x2F;diaodu&#x2F;xunshi&#x2F;base_info_server&#x2F;application.yml</p><h3 id="定时调度服务："><a href="#定时调度服务：" class="headerlink" title="定时调度服务："></a>定时调度服务：</h3><p> java -agentlib:jdwp&#x3D;transport&#x3D;dt_socket,server&#x3D;y,suspend&#x3D;n,address&#x3D;0.0.0.0:8073      -jar &#x2F;home&#x2F;linaro&#x2F;diaodu&#x2F;xunshi&#x2F;task_send_server&#x2F;scheduledJob.jar –server.port&#x3D;8074   –spring.config.location&#x3D;file:&#x2F;home&#x2F;linaro&#x2F;diaodu&#x2F;xunshi&#x2F;task_send_server&#x2F;application.yml</p><h3 id="任务调度服务"><a href="#任务调度服务" class="headerlink" title="任务调度服务:"></a>任务调度服务:</h3><p> java -agentlib:jdwp&#x3D;transport&#x3D;dt_socket,server&#x3D;y,suspend&#x3D;n,address&#x3D;0.0.0.0:8075      -jar &#x2F;home&#x2F;linaro&#x2F;diaodu&#x2F;xunshi&#x2F;task_execute_server&#x2F;jobexecute.jar –server.port&#x3D;8076     –spring.config.location&#x3D;file:&#x2F;home&#x2F;linaro&#x2F;diaodu&#x2F;xunshi&#x2F;task_execute_server&#x2F;application.yml</p><h2 id="cpolar（内网穿透）"><a href="#cpolar（内网穿透）" class="headerlink" title="cpolar（内网穿透）"></a>cpolar（内网穿透）</h2><p>192.168.31.69:9200</p>]]></content>
    
    
    <categories>
      
      <category>技术分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>开发</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
